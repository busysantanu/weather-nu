{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","weatherData","setWeather","_useState5","_useState6","setWeatherMain","_useState7","_useState8","showModal","setShowModal","_useState9","_useState10","latvalue","setLatvalue","_useState11","_useState12","longvalue","setLongvalue","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","concat","latitude","longitude","errors","err","console","warn","code","message","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","jsonRes","wrap","_context","prev","next","fetch","sent","json","main","log","stop","apply","this","arguments","loadPost","react_default","createElement","className","Fragment","type","placeholder","onClick","navigator","geolocation","permissions","query","name","then","result","state","getCurrentPosition","onchange","sys","country","data-feather","temp","weather","description","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.eea4993d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './App.css';  \n\nfunction App() {\n\n  const [loading, setLoading] = useState();\n  \n  const [weatherData, setWeather] = useState('');\n\n  const [weatherDataMain, setWeatherMain] = useState('');\n\n  const [showModal, setShowModal] = useState(true);\n  const [latvalue, setLatvalue] = useState('N/A');\n  const [longvalue, setLongvalue] = useState('N/A');\n  \n  var options = {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0,\n  };\n  function success(pos) {\n    var crd = pos.coords;\n    \n    setLatvalue(`${crd.latitude}`);\n    setLongvalue(`${crd.longitude}`);\n\n    setShowModal(false);  \n\n  }\n  \n  function errors(err) {\n    console.warn(`ERROR(${err.code}): ${err.message}`);    \n    setShowModal(true);\n  }\n\n  function getlocpopup() {\n    if (navigator.geolocation) {\n      navigator.permissions\n        .query({ name: \"geolocation\" })\n        .then(function (result) {\n          if (result.state === \"granted\") { \n            navigator.geolocation.getCurrentPosition(success);\n            setShowModal(false);\n          } else if (result.state === \"prompt\") {\n            navigator.geolocation.getCurrentPosition(success, errors, options);\n          } else if (result.state === \"denied\") {\n            setLatvalue('---');\n            setLongvalue('---');\n            setShowModal(true);\n          }\n          result.onchange = function () {\n          \n          };\n        });\n    } else {\n      \n    }\n  }\n\n  \n\n  useEffect(() => {\n    const loadPost = async () => { \n\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latvalue}&lon=${longvalue}&appid=b88abe27d6169857e5493890573e64cc&units=metric`);\n\n        const jsonRes = await response.json();\n         \n\n        setWeather(jsonRes);\n\n        setWeatherMain(jsonRes.main);\n        \n        console.log(jsonRes.main)  \n        console.log(jsonRes)  \n    }\n \n    loadPost();\n}, [latvalue]); \n\n\n\n\n  return (\n    <div className=\"App\"> \n\n      { showModal ? \n      <>\n        <div className='modalwrap'>\n          <div className='modalwrap-inner'>\n            <div className='select-location-holder'>\n              <input type=\"text\" placeholder='Enter your location...' />\n              <button className='sub-btn'><i className=\"fa-solid fa-magnifying-glass\"></i></button>\n              <button className='sub-btn-auto' onClick={getlocpopup}><i className=\"fa-solid fa-location-dot\"></i> Select location automatically</button>\n            </div>\n          </div>\n        </div>\n      </> \n      : null }\n\n        <div className=\"container\">\n          <div className=\"weather-side\">\n            <div className=\"weather-gradient\"></div>\n            <div className=\"date-container\">\n              <h2 className=\"date-dayname\">Tuesday</h2><span className=\"date-day\">15 Jan 2019</span>\n              <span className=\"location city-name\">{weatherData.name}, { weatherData.sys ? weatherData.sys.country : ''}\n                <div className=\"latlong\">\n                  <div className='latlong-inner'>\n                    <span className=\"name\">Latitude</span>\n                    <span className=\"value\">{latvalue} </span>\n                  </div>\n                  <div className='latlong-inner'>\n                    <span className=\"name\">Longitude</span> \n                    <span className=\"value\">{longvalue} </span>\n                  </div>\n                </div>\n              </span>\n\n            </div>\n            <div className=\"weather-container\"><i className=\"weather-icon\" data-feather=\"sun\"></i>\n              <h1 className=\"weather-temp\">{ weatherData.main ? weatherData.main.temp : ''}<span>Â°C</span></h1>\n              <h3 className=\"weather-desc\">{ weatherData.weather ? weatherData.weather[0].description : ''}</h3>\n            </div>\n          </div>\n          <div className=\"info-side\">\n            <div className=\"today-info-container\">\n              <div className=\"today-info\">\n                <div className=\"precipitation\"> <span className=\"title\">PRECIPITATION</span><span className=\"value\">0 %</span>\n                  <div className=\"clear\"></div>\n                </div>\n                <div className=\"humidity\"> <span className=\"title\">HUMIDITY</span><span className=\"value\">34 %</span>\n                  <div className=\"clear\"></div>\n                </div>\n                <div className=\"wind\"> <span className=\"title\">WIND</span><span className=\"value\">0 km/h</span>\n                  <div className=\"clear\"></div>\n                </div>\n              </div>\n            </div>\n            <div className=\"week-container\">\n              <ul className=\"week-list\">\n                <li className=\"active\"><i className=\"day-icon\" data-feather=\"sun\"></i><span className=\"day-name\">Tue</span><span className=\"day-temp\">29Â°C</span></li>\n                <li><i className=\"day-icon\" data-feather=\"cloud\"></i><span className=\"day-name\">Wed</span><span className=\"day-temp\">21Â°C</span></li>\n                <li><i className=\"day-icon\" data-feather=\"cloud-snow\"></i><span className=\"day-name\">Thu</span><span className=\"day-temp\">08Â°C</span></li>\n                <li><i className=\"day-icon\" data-feather=\"cloud-rain\"></i><span className=\"day-name\">Fry</span><span className=\"day-temp\">19Â°C</span></li>\n                <div className=\"clear\"></div>\n              </ul>\n            </div>\n            <div className=\"location-container\">\n              <button className=\"location-button\"> <i data-feather=\"map-pin\"></i><span>Change location</span></button>\n            </div>\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}